name: Build and Publish Game

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:

permissions:
  contents: write  # Required for creating/modifying releases

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12']
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Build game (Unix)
      if: runner.os != 'Windows'
      run: |
        chmod +x build.sh
        ./build.sh
    
    - name: Build game (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: .\build.ps1

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: juggle_ball_${{ runner.os }}
        path: dist/juggle_ball*
        retention-days: 5

  create-release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v3
      with:
        name: juggle_ball_Linux
        path: linux_build

    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: juggle_ball_macOS
        path: macos_build

    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: juggle_ball_Windows
        path: windows_build

    - name: Prepare release assets
      run: |
        VERSION=${{ github.ref_name }}
        mkdir release_assets
        cp linux_build/juggle_ball "release_assets/juggle_ball_linux_${VERSION}"
        cp macos_build/juggle_ball "release_assets/juggle_ball_macos_${VERSION}"
        cp windows_build/juggle_ball.exe "release_assets/juggle_ball_windows_${VERSION}.exe"
        chmod +x release_assets/*
        cd release_assets

        # Compress Linux binary
        tar czf "juggle_ball_linux_${VERSION}.tar.gz" "juggle_ball_linux_${VERSION}"
        rm "juggle_ball_linux_${VERSION}"
        
        # Compress macOS binary
        tar czf "juggle_ball_macos_${VERSION}.tar.gz" "juggle_ball_macos_${VERSION}"
        rm "juggle_ball_macos_${VERSION}"
        
        # Compress Windows binary
        zip "juggle_ball_windows_${VERSION}.zip" "juggle_ball_windows_${VERSION}.exe"
        rm "juggle_ball_windows_${VERSION}.exe"

        cd ..

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        tag_name: ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          release_assets/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
