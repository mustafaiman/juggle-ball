name: Build and Publish Game

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags

permissions:
  contents: write  # Required for creating/modifying releases

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12']
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Make build script executable
      run: chmod +x build.sh
      
    - name: Build game
      run: ./build.sh

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: juggle_ball_${{ runner.os }}
        path: dist/juggle_ball*
        retention-days: 5

  create-release:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Download Linux artifact
      uses: actions/download-artifact@v3
      with:
        name: juggle_ball_Linux
        path: linux_build

    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: juggle_ball_macOS
        path: macos_build

    - name: Prepare release assets
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        mkdir release_assets
        cp linux_build/juggle_ball "release_assets/juggle_ball_linux_${VERSION}"
        cp macos_build/juggle_ball "release_assets/juggle_ball_macos_${VERSION}"
        chmod +x release_assets/*

    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        draft: true
        prerelease: false
        files: |
          release_assets/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
